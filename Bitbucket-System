CREATE DATABASE [Bitbucket]

GO
USE [Bitbucket]
GO 

--1. DDL

CREATE TABLE	[Users](
      [Id] INT PRIMARY KEY IDENTITY,
      [Username] VARCHAR(30) NOT NULL,
      [Password] VARCHAR(30) NOT NULL,
      [Email] VARCHAR(50) NOT NULL
)

CREATE TABLE	[Repositories] (
      [Id] INT PRIMARY KEY IDENTITY,
      [Name] VARCHAR(50) NOT NULL
)

CREATE TABLE	[RepositoriesContributors] (
      [RepositoryId] INT NOT NULL FOREIGN KEY REFERENCES [Repositories]([Id]),
      [ContributorId] INT NOT NULL FOREIGN KEY REFERENCES [Users]([Id]),
      PRIMARY KEY([RepositoryId],[ContributorId] )
)

CREATE TABLE	[Issues] (
      [Id] INT PRIMARY KEY IDENTITY,
      [Title] VARCHAR(255) NOT NULL,
      [IssueStatus] VARCHAR(6),
      [RepositoryId] INT NOT NULL FOREIGN KEY REFERENCES [Repositories]([Id]),
      [AssigneeId] INT NOT NULL FOREIGN KEY REFERENCES [Users]([Id])
)

CREATE TABLE	[Commits] (
      [Id] INT PRIMARY KEY IDENTITY,
      [Message] VARCHAR(255) NOT NULL,
      [IssueId] INT FOREIGN KEY REFERENCES [Issues]([Id]),
      [RepositoryId] INT NOT NULL FOREIGN KEY REFERENCES [Repositories]([Id]),
      [ContributorId] INT NOT NULL FOREIGN KEY REFERENCES [Users]([Id])
)

CREATE TABLE	[Files] (
      [Id] INT PRIMARY KEY IDENTITY,
      [Name] VARCHAR(100) NOT NULL,
      [Size]	DECIMAL(15,2) NOT NULL,
      [ParentId] INT FOREIGN KEY REFERENCES [Files]([Id]),
      [CommitId] INT NOT NULL FOREIGN KEY REFERENCES [Commits]([Id])
)
-- !!! INSERT DATASET ( can be found in the repository)
-- 5. Select all commits from the database. Order them by id (ascending), message (ascending), repository id (ascending) and contributor id (ascending).

SELECT    [Id],
          [Message],
          [RepositoryID], 
          [ContributorId]
FROM      [Commits]
ORDER BY	[Id],
			    [Message],
			    [RepositoryId],
			    [ContributorId]
   
-- 6. Select all of the files, which have size, greater than 1000, and a 
-- name containing "html". Order them by size (descending), id (ascending) and by file name (ascending).

SELECT    [Id], 
          [Name],
          [Size] 
FROM      [Files]
WHERE     [Size] > 1000 AND [Name] LIKE '%html%'
ORDER BY  [Size] DESC,
          [Id],
          [Name]
    
--7. Select all of the issues, and the users that are assigned to them, so that they end up in the following format: 
-- {username} : {issueTitle}. Order them by issue id (descending) and issue assignee (ascending).

SELECT      [i].[Id], 
            CONCAT([u].[Username], ' : ', [i].[Title]) AS [IssueAssignee]
FROM        [Issues] AS [i]
LEFT JOIN   [Users] AS [u]
ON          [i].[AssigneeId] = [u].[Id]
ORDER BY    [i].[Id] DESC,
			      [IssueAssignee]
      
      
--8. Select all of the files, which are NOT a parent to any other file. Select their size of the file and add "KB" to the end of it. 
-- Order them file id (ascending), file name (ascending) and file size (descending).

SELECT    [fp].[Id], 
          [fp].[Name], 
          CONCAT([fp].[Size], 'KB') AS [Size]
FROM      [Files] AS [fch]
FULL OUTER JOIN [Files] AS [fp]
ON        [fch].[ParentId] = [fp].[Id]
WHERE     [fch].[Id]  IS NULL
ORDER BY  [fp].[Id], [fp]. [Name], [fp].Size DESC

--9.Select the top 5 repositories in terms of count of commits. 
-- Order them by commits count (descending), repository id (ascending) then by repository name (ascending).
SELECT TOP (5)  [r].[Id], 
                [r].[Name], 
                COUNT([C].[Id])  AS [Commits]
FROM            [Repositories] AS [r]
LEFT JOIN       [Commits] AS [c]
ON              [c].[RepositoryId] = [r].[Id]
LEFT JOIN       [RepositoriesContributors] AS [rc]
ON              [rc].[RepositoryId] = [r].[Id]
GROUP BY        [r].[Id], [r].[Name]
ORDER BY        [Commits] DESc, [r].[Id], [r].[Name]

--10. Select all users which have commits. Select their username and average size of the file, which were uploaded by them. 
-- Order the results by average upload size (descending) and by username (ascending).

SELECT    [u].[Username], 
          AVG([f].[Size]) AS [Size]
FROM      [Commits] AS [c]
INNER JOIN [Users] AS [u]
ON        [c].[ContributorId] = [u].[Id]
INNER JOIN [Files] AS [f] 
ON        [c].[Id] = [f].[CommitId]
GROUP BY  [u].[Username]
ORDER BY  [Size] DESC, [u].[Username]
